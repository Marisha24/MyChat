spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/base
spring.datasource.username=postgres
spring.datasource.password=1234

server.port=8082

spring.mustache.prefix=classpath:/static/
spring.mustache.suffix=.mustache
spring.mustache.expose-request-attributes=true

spring.servlet.multipart.max-file-size=128KB
spring.servlet.multipart.max-request-size=128KB
spring.servlet.multipart.enabled=true

file-path=C:\\MyCursChat\\noservice\\test1\\src\\main\\resources\\files
web-path=files/

#security.oauth2.client.clientId=103029140350-akkmpfjpss1t44v1gdkuol13bqosghik.apps.googleusercontent.com
#security.oauth2.client.clientSecret=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
#ecurity.oauth2.client.clientAuthenticationScheme=form
#security.oauth2.client.scope=openid,email,profile
#security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
#security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
#
#security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
#security.oauth2.resource.preferTokenInfo=true
#

#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
#



#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata
